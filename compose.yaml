
services:

  traefik:
    image: "traefik:v3.5"
    container_name: "traefik"
    restart: unless-stopped
    configs:
      - traefik-dynamic.yml    
    security_opt:       
      - no-new-privileges:true
    command:
      - --log.level=DEBUG
      - --api.insecure=true
      # comment out the next line to disable the Traefik dashboard
      - --api.dashboard=true

      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443

      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true

      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true

      # comment out the next line to use production LetsEncrypt
      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CF_API_TOKEN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOSTNAME}`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.service=api@internal
    ports:
      - "80:80"
      - "443:443"

      # comment out the next line to disable the Traefik dashboard port
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
        - traefik

#  whoami:
#    image: "traefik/whoami"
#    container_name: "whoami"
#    labels:
#      - traefik.enable=true
#      - traefik.http.routers.whoami.rule=Host(`${HTTPS_HOSTNAME}`)
#      - traefik.http.routers.whoami.entrypoints=websecure
#      - traefik.http.routers.whoami.tls.certresolver=letsencrypt
#      - traefik.http.services.whoami.loadbalancer.server.port=80
#    networks:
#      - traefik

configs:
  traefik-dynamic.yml:
    file: ./traefik-dynamic.yml

volumes:
  letsencrypt:

networks:
  traefik:
    external: true